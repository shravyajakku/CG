MYSQL - EXERCISE
________________

Q1. Write a SQL statement to display all the information of all salesmen.
Ans: SELECT * FROM salesman

Q2.  Write a SQL statement to display a string "This is SQL Exercise, Practice and Solution".
Ans: SELECT 'This is SQLExercise, Practice And Solution'

Q3. Write a query to display three numbers in three columns.
Ans: SELECT '1 2 3';

Q4. Write a query to display the sum of two numbers 10 and 15 from RDMS server.
Ans: SELECT 10+15;

Q5. Write a query to display the result of an arithmetic expression.
Ans: SELECT 10+15*4-12;

Q6. Write a SQL statement to display specific columns like name and commission for all the salesmen. 
Ans: SELECT name, commission FROM salesman

Q7. Write a query to display the columns in a specific order like order date, salesman id, order number and purchase amount for all the orders.
Ans: SELECT ord_date, salesman_id, ord_no, purch_amt FROM orders;

Q8. From the following table, write a SQL query to find the unique salespeople ID. Return salesman_id.
Ans: SELECT DISTINCT salesman_id FROM orders

Q9. From the following table, write a SQL query to find the salespeople who lives in the City of 'Paris'. Return salesperson's name, city.
Ans: SELECT name, city FROM salesman WHERE city = 'Paris';

Q10. From the following table, write a SQL query to find those customers whose grade is 200. Return customer_id, cust_name, city, grade, salesman_id.
Ans: SELECT * FROM customer WHERE grade = 200;

Q11. From the following table, write a SQL query to find the orders, which are delivered by a salesperson of ID. 5001. Return ord_no, ord_date, purch_amt.
Ans: SELECT ord_no, ord_date, purch_amt FROM orders WHERE salesman_id = 5001;

Q12. From the following table, write a SQL query to find the Nobel Prize winner(s) in the year 1970. Return year, subject and winner.
Ans: SELECT YEAR, SUBJECT, WINNER FROM nobel_win WHERE YEAR = 1970;

Q13. From the following table, write a SQL query to find the Nobel Prize winner in 'Literature' in the year 1971. Return winner.
Ans: SELECT WINNER FROM nobel_win WHERE SUBJECT='Literature' AND YEAR = 1971;

Q14. From the following table, write a SQL query to find the Nobel Prize winner 'Dennis Gabor'. Return year, subject. 
Ans: SELECT YEAR, SUBJECT FROM nobel_win WHERE WINNER='Dennis Gabor';

Q15. From the following table, write a SQL query to find the Nobel Prize winners in 'Physics' since the year 1950. Return winner. 
Ans: SELECT WINNER FROM nobel_win WHERE YEAR>=1950 AND SUBJECT='Physics';

Q16.  From the following table, write a SQL query to find the Nobel Prize winners in 'Chemistry' between the years 1965 to 1975. Begin and end values are included. Return year, subject, winner, and country.
Ans: SELECT year, subject, winner, country FROM nobel_win WHERE year>=1965 AND year<=1975 AND subject='Chemistry';

Q17. Write a SQL query to show all details of the Prime Ministerial winners after 1972 of Menachem Begin and Yitzhak Rabin.
Ans: SELECT * FROM nobel_win WHERE year>1972 AND winner IN ('Menachem Begin','Yitzhak Rabin');

Q18. From the following table, write a SQL query to find the details of the winners whose first name matches with the string 'Louis'. Return year, subject, winner, country, and category.
Ans: SELECT year, subject, winner, country, category FROM nobel_win WHERE winner LIKE 'Louis %';

Q19. From the following table, write a SQL query to combine the winners in Physics, 1970 and in Economics, 1971. Return year, subject, winner, country, and category.
Ans: SELECT * FROM nobel_win WHERE (year = 1970 AND subject ='Physics') UNION (SELECT * FROM nobel_win  WHERE (year=1971 AND subject = 'Economics'));

Q20. From the following table, write a SQL query to find the Nobel Prize winners in 1970 excluding the subjects Physiology and Economics. Return year, subject, winner, country, and category.
Ans: SELECT * FROM nobel_win WHERE (year = 1970) AND subject NOT IN('Physiology', 'Economics');

Q21. From the following table, write a SQL query to combine the winners in 'Physiology' before 1971 and winners in 'Peace' on or after 1974. Return year, subject, winner, country, and category.
Ans: SELECT * FROM nobel_win WHERE (subject = 'Physiology' AND year<1971) UNION (SELECT * FROM nobel_win WHERE (subject = 'Peace' AND year>=1974));

Q22. From the following table, write a SQL query to find the details of the Nobel Prize winner 'Johannes Georg Bednorz'. Return year, subject, winner, country, and category. 
Ans: SELECT * FROM nobel_win WHERE winner = 'Johannes Georg Bednorz';

Q23. From the following table, write a SQL query to find the Nobel Prize winners for the subject not started with the letter 'P'. Return year, subject, winner, country, and category. Order the result by year, descending.
Ans: SELECT * FROM nobel_win WHERE subject NOT LIKE 'P%' ORDER BY year DESC;

Q24. From the following table, write a SQL query to find the details of 1970 Nobel Prize winners. Order the result by subject, ascending except ‘Chemistry’ and ‘Economics’ which will come at the end of result set. Return year, subject, winner, country, and category.
Ans: SELECT * FROM nobel_win WHERE year=1970 ORDER BY subject IN ('Economics','Chemistry') ASC;

Q25. From the following table, write a SQL query to select a range of products whose price is in the range Rs.200 to Rs.600. Begin and end values are included. Return pro_id, pro_name, pro_price, and pro_com
Ans: SELECT pro_id, pro_name, pro_price, pro_com FROM item_mast WHERE pro_price BETWEEN 200 AND 600; (or)
SELECT pro_id, pro_name, pro_price, pro_com FROM item_mast WHERE (pro_price>=200 AND pro_price<=600); 

Q26. From the following table, write a SQL query to calculate the average price for manufacturer code equal to 16. Return avg.
Ans: SELECT AVG(pro_price) FROM item_mast WHERE pro_com=16;

Q27.  From the following table, write a SQL query to display the pro_name as 'Item Name' and pro_priceas 'Price in Rs.'  
Ans: SELECT pro_name as "Item Name", pro_price as "Price in Rs" FROM item_mast;

Q28. From the following table, write a SQL query to find the items whose prices are higher than or equal to $250. Order the result by product price in descending, then product name in ascending. Return pro_name and pro_price.
Ans: SELECT pro_name, pro_price FROM item_mast WHERE pro_price >= 250 ORDER BY pro_price DESC, pro_name ASC;

Q29. From the following table, write a SQL query to calculate average price of the items of each company. Return average price and company code.
Ans: SELECT AVG(pro_price), pro_com FROM item_mast GROUP BY pro_com;

Q30. From the following table, write a SQL query to find the cheapest item(s). Return pro_name and, pro_price.
Ans: SELECT pro_name, pro_price FROM item_mast WHERE pro_price=(SELECT MIN(pro_price) FROM item_mast);

Q31. From the following table, write a SQL query to find unique last name of all employees. Return emp_lname.
Ans: SELECT DISTINCT(emp_lname) FROM emp_details;

Q32. From the following table, write a SQL query to find the details of employees whose last name is 'Snares'. Return emp_idno, emp_fname, emp_lname, and emp_dept.
Ans: SELECT * FROM emp_details WHERE emp_lname='Snares';

Q33. From the following table, write a SQL query to find the details of the employees who work in department 57. Return emp_idno, emp_fname, emp_lname and emp_dept.
Ans: SELECT * FROM emp_details WHERE emp_dept=57;